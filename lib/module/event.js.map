{"version":3,"names":["useEffect","useState","RNBluetoothClassic","useOnDataReceived","address","data","setData","console","error","onDataReceived","event","subscription","onDeviceRead","remove"],"sources":["event.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport RNBluetoothClassic, { BluetoothEventSubscription, } from 'react-native-bluetooth-classic';\n\nexport const useOnDataReceived = (address: string): [string, () => void] => {\n    const [data, setData] = useState<string>('');\n\n    useEffect(() => {\n        if(!address) {\n            console.error('Device address is required')\n            return;\n        }\n        const onDataReceived = (event: { data: string }) => {\n            setData(event.data);\n        }\n        \n        const subscription: BluetoothEventSubscription = RNBluetoothClassic.onDeviceRead(address, onDataReceived);\n        return () => subscription.remove();\n        \n    }, [address])\n\n    return [data, () => { }];\n}"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,kBAAkB,MAAuC,gCAAgC;AAEhG,OAAO,MAAMC,iBAAiB,GAAIC,OAAe,IAA2B;EACxE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAS,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ,IAAG,CAACI,OAAO,EAAE;MACTG,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;MAC3C;IACJ;IACA,MAAMC,cAAc,GAAIC,KAAuB,IAAK;MAChDJ,OAAO,CAACI,KAAK,CAACL,IAAI,CAAC;IACvB,CAAC;IAED,MAAMM,YAAwC,GAAGT,kBAAkB,CAACU,YAAY,CAACR,OAAO,EAAEK,cAAc,CAAC;IACzG,OAAO,MAAME,YAAY,CAACE,MAAM,CAAC,CAAC;EAEtC,CAAC,EAAE,CAACT,OAAO,CAAC,CAAC;EAEb,OAAO,CAACC,IAAI,EAAE,MAAM,CAAE,CAAC,CAAC;AAC5B,CAAC","ignoreList":[]}