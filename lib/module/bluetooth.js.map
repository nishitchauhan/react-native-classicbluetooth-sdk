{"version":3,"names":["RNBluetoothClassic","checkAllPermissions","ToastAndroid","isBluetoothEnabled","err","console","error","Error","enableBluetooth","requestBluetoothEnabled","startDiscovery","isBLenabled","allPermission","enableBL","unpaired","cancelDiscovery","log","stopDiscovery","cancelled","show","BOTTOM","connectDevice","deviceId","connected","connectToDevice","delimiter","disconnectDevice","disconnected","disconnectFromDevice","pairDevice","paired","unPairDevice","unpairDevice","getPairedDevices","pairedDevices","getBondedDevices","getConnectedDevice","connectedDevices","getConnectedDevices","bondedDevices","onBluetoothEnabled","callback","subscription","onBluetoothDisabled","onStateChanged","onDeviceConnected","onDeviceDisconnected","openBluetoothSettings","SHORT","cleanupSubscriptions","subscriptions","forEach","remove","read","device","data","write","success","available","bytesAvailable","clear","cleared"],"sources":["bluetooth.ts"],"sourcesContent":["import RNBluetoothClassic, {\n  BluetoothDevice,\n  BluetoothDeviceEvent\n} from \"react-native-bluetooth-classic\";\nimport { checkAllPermissions } from \"./permission\";\nimport { ToastAndroid } from \"react-native\";\n\ntype Subscription = {\n  remove: () => void;\n};\n\nexport const isBluetoothEnabled = async () => {\n  try {\n    return await RNBluetoothClassic.isBluetoothEnabled();\n  } catch (err) {\n    console.error(err);\n    throw new Error(\"Failed to check if Bluetooth is enabled\");\n  }\n};\n\nexport const enableBluetooth = async () => {\n  try {\n    await RNBluetoothClassic.requestBluetoothEnabled();\n  } catch (error) {\n    console.error(\"Error enabling Bluetooth\", error);\n    throw new Error(\"Failed to enable Bluetooth\");\n  }\n};\n\nexport const startDiscovery = async () => {\n  const isBLenabled = await isBluetoothEnabled();\n  const allPermission = await checkAllPermissions();\n  if (!isBLenabled) {\n    const enableBL = await enableBluetooth();\n    return enableBL;\n  } else if (!allPermission) {\n    return allPermission;\n  } else {\n    try {\n      const unpaired = await RNBluetoothClassic.startDiscovery();\n      return unpaired;\n    } catch (error) {\n      console.error(error);\n      return error;\n    } finally {\n      await RNBluetoothClassic.cancelDiscovery();\n      console.log(\"Discovery stopped\");\n    }\n  }\n};\n\nexport const stopDiscovery = async () => {\n  try {\n    const cancelled = await RNBluetoothClassic.cancelDiscovery();\n    console.log(cancelled);\n  } catch (error) {\n    ToastAndroid.show(\n      `Error occurred while attempting to cancel discover devices`,\n      ToastAndroid.BOTTOM\n    );\n  }\n};\nexport const connectDevice = async (deviceId: string) => {\n  try {\n    const connected = await RNBluetoothClassic.connectToDevice(deviceId, {\n      delimiter: \"\\r\",\n    });\n    if (!connected) {\n      throw new Error(`Failed to connect to device: ${deviceId}`);\n    }\n    console.log(`Connected to device: ${deviceId}`);\n    return connected;\n  } catch (error) {\n    ToastAndroid.show(\n      `Error connecting to device: ${deviceId}`,\n      ToastAndroid.BOTTOM\n    );\n    return false;\n  }\n};\n\nexport const disconnectDevice = async (deviceId: string) => {\n  try {\n    const disconnected = await RNBluetoothClassic.disconnectFromDevice(\n      deviceId\n    );\n    if (!disconnected) {\n      throw new Error(`Failed to disconnect from device: ${deviceId}`);\n    }\n    console.log(`Disconnected from device: ${deviceId}`);\n    return disconnected;\n  } catch (error) {\n    console.error(`Error disconnecting from device: ${deviceId}`, error);\n    throw error;\n  }\n};\n\nexport const pairDevice = async (deviceId: string) => {\n  try {\n    const paired = await RNBluetoothClassic.pairDevice(deviceId);\n    if (!paired) {\n      throw new Error(`Failed to pair with device: ${deviceId}`);\n    }\n    return paired;\n  } catch (error) {\n    console.error(`Error pairing with device: ${deviceId}`, error);\n    throw error;\n  }\n};\n\nexport const unPairDevice = async (deviceId: string) => {\n  try {\n    const unpaired = await RNBluetoothClassic.unpairDevice(deviceId);\n    if (!unpaired) {\n      throw new Error(`Failed to unpair with device: ${deviceId}`);\n    }\n    return unpaired;\n  } catch (error) {\n    console.error(`Error unpairing with device: ${deviceId}`, error);\n    throw error;\n  }\n};\n\nexport const getPairedDevices = async () => {\n  try {\n    const pairedDevices = await RNBluetoothClassic.getBondedDevices();\n    return pairedDevices;\n  } catch (err) {\n    console.error(\"Error getting paired devices\", err);\n    return [];\n  }\n};\n\nexport const getConnectedDevice = async () => {\n  try {\n    const connectedDevices = await RNBluetoothClassic.getConnectedDevices();\n    return connectedDevices;\n  } catch (err) {\n    console.error(\"Error getting connected devices\", err);\n    return [];\n  }\n};\n\nexport const getBondedDevices = async (): Promise<BluetoothDevice[]> => {\n  try {\n    const bondedDevices = await RNBluetoothClassic.getBondedDevices();\n    return bondedDevices;\n  } catch (error) {\n    console.error(\"Error fetching bonded devices:\", error);\n    throw new Error(\"Failed to fetch bonded devices\");\n  }\n};\n\nexport const onBluetoothEnabled = (callback: () => void): Subscription => {\n  const subscription = RNBluetoothClassic.onBluetoothEnabled(callback);\n  return subscription;\n};\n\nexport const onBluetoothDisabled = (callback: () => void): Subscription => {\n  const subscription = RNBluetoothClassic.onBluetoothDisabled(callback);\n  return subscription;\n};\n\nexport const onStateChanged = (\n  callback: (event: BluetoothDeviceEvent) => void\n): Subscription => {\n  const subscription = RNBluetoothClassic.onStateChanged(callback);\n  return subscription;\n};\n\nexport const onDeviceConnected = (\n  callback: (device: BluetoothDeviceEvent) => void\n): Subscription => {\n  const subscription = RNBluetoothClassic.onDeviceConnected(callback);\n  return subscription;\n};\n\nexport const onDeviceDisconnected = (\n  callback: (device: BluetoothDeviceEvent) => void\n): Subscription => {\n  const subscription = RNBluetoothClassic.onDeviceDisconnected(callback);\n  return subscription;\n};\n\nexport const openBluetoothSettings = async (): Promise<void> => {\n  try {\n    await RNBluetoothClassic.openBluetoothSettings();\n    ToastAndroid.show(\"Bluetooth settings opened\", ToastAndroid.SHORT);\n  } catch (error) {\n    console.error(\"Error opening Bluetooth settings:\", error);\n    throw new Error(\"Failed to open Bluetooth settings\");\n  }\n};\n\nexport const cleanupSubscriptions = (subscriptions: Subscription[]): void => {\n  subscriptions.forEach((subscription) => subscription.remove());\n};\n\nexport const read = async (device: BluetoothDevice): Promise<any> => {\n  try {\n    if (!device) throw new Error(\"No device connected.\");\n    const data = await device.read();\n    console.log(`Data read from device: ${data}`);\n    return data;\n  } catch (error) {\n    console.error(\"Error reading data from device:\", error);\n    throw new Error(\"Failed to read data from device\");\n  }\n};\n\nexport const write = async (\n  device: BluetoothDevice,\n  data: string\n): Promise<boolean> => {\n  try {\n    if (!device) throw new Error(\"No device connected.\");\n    const success = await device.write(data);\n    if (success) {\n      console.log(`Data written to device: ${data}`);\n    }\n    return success;\n  } catch (error) {\n    console.error(`Error writing data to device: ${data}`, error);\n    throw new Error(\"Failed to write data to device\");\n  }\n};\n\nexport const available = async (device: BluetoothDevice): Promise<number> => {\n  try {\n    if (!device) throw new Error(\"No device connected.\");\n    const bytesAvailable = await device.available();\n    console.log(`Bytes available to read: ${bytesAvailable}`);\n    return bytesAvailable;\n  } catch (error) {\n    console.error(\"Error checking available bytes:\", error);\n    throw new Error(\"Failed to check available bytes\");\n  }\n};\n\nexport const clear = async (device: BluetoothDevice): Promise<boolean> => {\n  try {\n    if (!device) throw new Error(\"No device connected.\");\n    const cleared = await device.clear();\n    console.log(\"Buffer cleared\");\n    return cleared;\n  } catch (error) {\n    console.error(\"Error clearing buffer:\", error);\n    throw new Error(\"Failed to clear buffer\");\n  }\n};\n"],"mappings":"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","ignoreList":[]}